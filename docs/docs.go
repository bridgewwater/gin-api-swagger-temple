// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2021-02-02 16:31:50.400963 +0800 CST m=+0.014268000

package docs

import (
	"bytes"
	"encoding/json"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://github.com/",
        "contact": {
            "name": "API Support",
            "url": "http://github.com/",
            "email": "support@sinlov.cn"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/biz/json": {
            "get": {
                "description": "warning api in prod will hide, abs remote api for dev",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "biz"
                ],
                "summary": "/biz/json",
                "responses": {
                    "200": {
                        "description": "value in biz.Biz",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/biz.Biz"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/biz/modelBiz": {
            "post": {
                "description": "warning api in prod will hide, abs remote api for dev",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "biz"
                ],
                "summary": "/biz/modelBiz",
                "parameters": [
                    {
                        "description": "body biz.Biz for post",
                        "name": "biz",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/biz.Biz"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "value in biz.Biz",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/biz.Biz"
                        }
                    },
                    "400": {
                        "description": "error at errdef.Err",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errdef.Err"
                        }
                    }
                }
            }
        },
        "/biz/path/{some_id}": {
            "get": {
                "description": "warning api in prod will hide, abs remote api for dev",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "biz"
                ],
                "summary": "/biz/path",
                "parameters": [
                    {
                        "type": "string",
                        "description": "some id to show",
                        "name": "some_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "value in biz.Biz",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/biz.Biz"
                        }
                    },
                    "400": {
                        "description": "error at errdef.Err",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errdef.Err"
                        }
                    }
                }
            }
        },
        "/biz/query/": {
            "get": {
                "description": "warning api in prod will hide, abs remote api for dev",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "biz"
                ],
                "summary": "/biz/query",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "value in biz.Biz",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/biz.Biz"
                        }
                    },
                    "400": {
                        "description": "error at errdef.Err",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errdef.Err"
                        }
                    }
                }
            }
        },
        "/biz/string": {
            "get": {
                "description": "get string of this api.",
                "tags": [
                    "biz"
                ],
                "summary": "/biz/string",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "biz.Biz": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "id123zqqeeadg24qasd"
                },
                "info": {
                    "type": "string",
                    "example": "input info here"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "errdef.Err": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{Schemes: []string{}}

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
