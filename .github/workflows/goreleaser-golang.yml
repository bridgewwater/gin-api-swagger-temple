name: goreleaser-golang

on:
  workflow_call: # https://docs.github.com/actions/using-workflows/reusing-workflows#using-inputs-and-secrets-in-a-reusable-workflow
    inputs:
      dry_run:
        description: 'dry run flag'
        default: false
        required: false
        type: boolean
      snapshot:
        description: 'snapshot build flag'
        default: false
        required: false
        type: boolean
      goreleaser-build-timeout-minutes:
        description: 'goreleaser build timeout minutes default 30'
        default: 30
        required: false
        type: number
      version_name:
        description: 'most of this use tag name'
        default: ''
        required: false
        type: string
      upload_artifact_name:
        description: 'upload artifact name'
        default: ''
        required: false
        type: string
      go_build_id:
        description: 'setup go build id'
        default: 'unknown'
        required: false
        type: string

permissions: # https://docs.github.com/actions/using-workflows/workflow-syntax-for-github-actions#permissions
  contents: write

jobs:
  goreleaser-golang:
    defaults:
      run:
        shell: bash
       # working-directory: ${{ env.WORK_DIR }}
    strategy:
      matrix:
        # You can add more, for any target you'd like! target list see: go tool dist list
        include:
          - build: linux-amd64
            os: ubuntu-latest
            go_os: linux
            go_arch: amd64
          # - build: linux-arm64
          #   os: ubuntu-latest
          #   go_os: linux
          #   go_arch: arm64
          # - build: macos-amd64
          #   os: macos-latest
          #   go_os: darwin
          #   go_arch: amd64
          # - build: macos-arm64
          #   os: macos-latest
          #   go_os: darwin
          #   go_arch: arm64
          # - build: windows-amd64
          #   os: windows-latest
          #   go_os: windows
          #   go_arch: amd64
          # - build: windows-arm64
          #   os: windows-latest
          #   go_os: windows
          #   go_arch: arm64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go SDK
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.11'
          cache: false

      -
        name: healthcheck GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: '~> v2'
          args: healthcheck

      -
        name: check GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: '~> v2'
          args: check

      -
        name: Dry Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        if: ${{ inputs.dry_run }}
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: '~> v2'
          args: release --clean --timeout ${{ inputs.goreleaser-build-timeout-minutes }}m --auto-snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Your GoReleaser Pro key, if you are using the 'goreleaser-pro' distribution
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        if: ${{ ! inputs.dry_run }}
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: '~> v2'
          args: release --clean --timeout ${{ inputs.goreleaser-build-timeout-minutes }}m --auto-snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Your GoReleaser Pro key, if you are using the 'goreleaser-pro' distribution
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}